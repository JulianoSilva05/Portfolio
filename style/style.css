@import url('https://fonts.googleapis.com/css2?family=Krona+One&family=Montserrat:wght@400;600&display=swap');

:root{/*Pseudo classe - global*/
    --cor-primaria: #000000;
    --cor-secundaria: #f6f6f6;
    --cor-terciaria: #22D4FD;
    --cor-houver:#42423b;

    --fonte-primaria: 'Krona One', sans-serif;
    --fonte-segundaria: 'Montserrat', sans-serif;
}

*{
    margin: 0;
    padding: 0;
}

body{  /*Isso é um seletor*/
    /* height: 100vh; vh - ViewHeight - ou seja, 100%v da nossa altura. vh será nossa unideda de medida */
    box-sizing: border-box; /*essa propriedade define que todo elemento filho não ultrapasse sa largura do body*/
    /*Existem dois valores possíveis para a propriedade "box-sizing":
"content-box": este é o valor padrão. Quando o "box-sizing" é definido como "content-box", a largura e a altura do elemento incluem apenas o conteúdo, excluindo qualquer preenchimento (padding) e borda (border) adicionais.
"border-box": Quando o "box-sizing" é definido como "border-box", a largura e a altura do elemento incluem o conteúdo, o preenchimento (padding) e a borda (border), tudo junto.*/
    background-color: var(--cor-primaria); /*cor do fundo*/
    color: var(--cor-secundaria);/*Cor da fonte*/

}

/*Porem quando usamos seletores universair (Body, Strongf, h1, etc. altera em todo o documento!
Isso não é legal....
Para resolver esse problema usamos "Classes" dentro dos seletores*/
/*https://www.w3schools.com/cssref/sel_class.php*/

.cabecalho{
    padding: 2% 0% 0% 15%;
}

.cabecalho__menu{
    display: flex;
    gap: 80px;
}

.cabecalho__menu__link{
    font-family: var(--fonte-segundaria);
    font-size: 1.5rem;
    font-weight: 600; /*font-weight é o peso da fonte*/
    color:var(--cor-terciaria);
    text-decoration: none;

}

.apresentacao{
    padding: 5% 15%;
    /* margin:10% 15%; */
    display: flex; /*A propriedade "display: flex" é usada para criar um contêiner flexível em CSS. Quando aplicada a um elemento HTML, ela transforma esse elemento em um contêiner flexível que pode conter um ou mais elementos filhos (também conhecidos como itens flexíveis).*/
    align-items: flex-start;  /*A propriedade "align-items" define o alinhamento dos itens flexíveis ao longo do eixo transversal do contêiner, que é perpendicular ao eixo principal. Ou seja, se a direção principal do contêiner é horizontal, o eixo transversal é vertical, e vice-versa.*/
    justify-content: space-between;
    gap:82px;
}


.apresentacao__conteudo{
    width: 80%;/*define a largura*/
    /*height: 546px;/*define a altura*/
    display: flex;/*Coloca dotos os conteudos em flexbox*/
    flex-direction: column;/*define a direção do flexbox para colunas (por padrão, o flexboxz vem como row(linhas)*/
    gap: 40px; /*espaçamento entre os elementos do flexbox*/
    /**Gap - A propriedade gap não é exclusiva do Flexbox, porém é utilizada quase sempre em conjunto com ele. Ela especifica no CSS o tamanho dos espaços entre linhas e colunas em layouts de grid*/

}

.apresentacao__conteudo__curriculo{
    width: 80%;/*define a largura*/
    display: flex;/*Coloca dotos os conteudos em flexbox*/
    flex-direction: column;/*define a direção do flexbox para colunas (por padrão, o flexboxz vem como row(linhas)*/
    gap: 40px; /*espaçamento entre os elementos do flexbox*/
    /**Gap - A propriedade gap não é exclusiva do Flexbox, porém é utilizada quase sempre em conjunto com ele. Ela especifica no CSS o tamanho dos espaços entre linhas e colunas em layouts de grid*/

}

.apresentacao__curriculo { /* Main Curriculo*/
    padding: 5% 15%;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
}
.imagem {
    width: 10%;
}
.contato{
    display: flex;
    gap: 50px;
}

.apresentacao__conteudo__titulo{
    font-size:2.25rem;/*Tamanho da fonte*/
    font-family: var(--fonte-primaria);
}

.titulo-destaque{
    color: var(--cor-terciaria);
}

.apresentacao__conteudo_texto{
    font-size:1.5rem;
    font-family: var(--fonte-segundaria);
    text-align: justify;

}


.apresentacao__conteudo_texto a{
    text-decoration: none;
    color: var(--cor-terciaria);
}

.apresentacao__conteudo_assinatura{
    font-size:1.5rem;
    font-family: var(--fonte-primaria);
    color: var(--cor-terciaria);/*cor da fonte*/
}


.apresentacao__links{
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    align-items: center;/*Coloca a posição dos itens no centro*/
    gap: 32px;/*coloca um espaço entre os itens*/
}

.apresentacao__links__subtitulo{
    font-family: var(--fonte-primaria);
    font-weight: 400;
    font-size: 1.5rem;
}

.apresentacao__links__navegacao{
    /*background-color: #22D4FD;/*cor de fundo*/
    display: flex;/*Flexbox*/
    justify-content: center;
    gap:16px;
    width: 50%;/*largura do elemento*/
    text-align: center;/*Alinhamento do texto dentro do elemento*/
    border-radius: 8px;
    font-size: 1.5rem;/*tamanho da fonte*/
    font-weight: 600;/*peso da fonte*/
    padding: 21.5px 0;/*horizontal / vertical*/
    text-decoration: none;/*retira a formatação padrão*/
    color: var(--cor-secundaria);
    font-family: var(--fonte-segundaria);
    border: 2px solid var(--cor-terciaria); /*largura da borda / solid = borda solida / cor da borda*/

}

.apresentacao__links__link:hover{
    background-color: var(--cor-houver);
}

.imprimir{
    margin: 0 100% ;
    width: 5%;
}

.apresentacao__imagem{
    width: 40%;
    align-items: flex-start;
}
.rodape{
    color: var(--cor-primaria);
    background-color: var(--cor-terciaria);
    /*margin:10% 0; /*Margem é da borda para fora*/
    padding: 28px; /*padding é da borda para dentro até o conteúdo*/
    text-align: center;
    font-family: var(--fonte-segundaria);
    font-size: 1.5rem;
    font-weight: 400;

}

@media (max-width: 1200px) {

    .cabecalho{
        padding: 10%;

    }

    .cabecalho__menu{
        justify-content: center;
    }

    .apresentacao {
        padding: 5%;
        flex-direction: column-reverse;
    }

    .apresentacao__conteudo{
        width: auto;/*auto ocupa o espaço do padding - */
        
    }


}
